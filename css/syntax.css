/*comment*/


/* targeting elements/tags */
/*
p {
  color: blue;
}

a {
  text-decoration: underline;
}

span {
  text-transform: uppercase;
}

div {
  width: 100%;
  background-color: grey;
}

#header {
  display: block;
  font-size: 18px;
}

h1 {
  font-size: 18px;
}
.color {
  color: violet;
}
*/
/***************
*
*Cascades and conflicts - rules are executing from top to bottom
*
**************/
/*
span{
    color: blue;
    
}

span{
    color: red;
}
*/
/* zostanie użyty kolor czerwony wg zasady from top to bottom */


#header {
  font-size: 16px;
}

h1 {
    color: yellow !important; /* !important nie będzie zastępowane inną regułą */
}
h1 {
    color: grey;
}
/****************
*
*Multiple elements
*
*************************/
/*
p{
    color: red;
    font-size: 14px;
    font-weight: bold;
    font-family: Arial;
}

a{
    color: red;
    font-size: 14px;
    font-weight: bold;
    font-family: Arial;
}

span{
    color: red;
    font-size: 14px;
    font-weight: bold;
    font-family: Arial;
}
*/
/*powyższe zastępujemy zbiorczym*/
/*
p, span, a {
    color: red;
    font-size: 14px;
    font-weight: bold;
    font-family: Arial;
}

*/
/*
*
*Descendants selectors - elementy zagnieżdżone
*


#main-header p {
    color: red;
}
/*wszystkie tagi "p" będę czerwone w id main-header, ale nie w całym kodzie, może wyglądać np: #header #main-menu - będzie definiowało elementy w main menu w header id
*/
/****************************************/
 

/* children wstawiamy po elemencie rodzica i przed elementem dziecka 
np:
#main-header > p {
color: red;
}
ustawi czcionkę w paragrafie "p" tylko jeśli to jest dziecko main-header

*/
/* Adjacent selectors */
#all-articles h2 + p{
    color: green;
}



